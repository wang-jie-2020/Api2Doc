@using Swashbuckle.AspNetCore.Swagger;
@*如果不注释，在RazorEngine不认？*@
@*@model Microsoft.OpenApi.Models.OpenApiDocument;*@

<!DOCTYPE html>
<html>
<head>
    <title>OpenAPI文档代码生成器</title>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <style type='text/css'>
        table, table td, table th {
            border: 1px solid #000000;
            border-collapse: collapse;
        }

        table {
            table-layout: fixed;
            word-break: break-all;
        }

        tr {
            height: 20px;
            font-size: 12px;
        }
    </style>
</head>
<body>
    <div style='width:1000px; margin: 0 auto'>
        @*<span><i>Swagger Word文档</i></span>*@
        <h1 align="center">@Model.Info.Title</h1>
        <h1 align="center">接口文档 @Model.Info.Version</h1>

        @if (Model.Info.Contact != null)
        {
            <h4>联系方式</h4>
            <span>作者：@Model.Info.Contact.Name</span>
            <br>
            <a href="@Model.Info.Contact.Email" rel="noopener noreferrer" class="link">Email</a>
            <br>
            <a href="@Model.Info.Contact.Url" target="_blank" rel="noopener noreferrer" class="link">Website</a>
            <br>
        }

        <h2>文档说明</h2>
        <span>@Model.Info.Description</span>

        <h2>Authorization</h2>
        <table border='1' cellspacing='0' cellpadding='0' style="table-layout: fixed; word-break: break-all;border: 1px solid #000000;border-collapse: collapse;" width='100%'>
            @{
                var security = Model.Components.SecuritySchemes;
                if (security.Count > 0)
                {
                    <tr style="border: 1px solid #000000;border-collapse: collapse;">
                        <td align="center" style="background-color: rgb(84, 127, 177);">方式</td>
                        <td colspan='4'> @(security.FirstOrDefault().Key + " " + security.FirstOrDefault().Value.Name)</td>
                    </tr>

                    <tr style="border: 1px solid #000000;border-collapse: collapse;">
                        <td align="center" style="background-color: rgb(84, 127, 177);">类型</td>
                        <td colspan='4'>@security.FirstOrDefault().Value.BearerFormat</td>
                    </tr>

                    <tr style="border: 1px solid #000000;border-collapse: collapse;">
                        <td align="center" style="background-color: rgb(84, 127, 177);">说明</td>
                        <td colspan='4'>@security.FirstOrDefault().Value.Description</td>
                    </tr>
                }
            }
        </table>

        @{
            var tag = string.Empty;
        }
        @foreach (var item in Model.Paths)
        {
            @foreach (var operation in item.Value.Operations)
            {
                if (tag != operation.Value.Tags.FirstOrDefault()?.Name)
                {
                    tag = operation.Value.Tags.FirstOrDefault()?.Name;
                    <h2>@tag</h2>
                }

                <table border='1' cellspacing='0' cellpadding='0' width='100%' style="table-layout: fixed; word-break: break-all;border: 1px solid #000000;border-collapse: collapse;">
                    <tr style="background-color: #49cc90;" align="left">
                        <td colspan='6'><h3>@item.Key</h3></td>
                    </tr>
                    <tr style="border: 1px solid #000000;border-collapse: collapse;height: 20px;font-size: 12px;">
                        <td style="border: 1px solid #000000;border-collapse: collapse;">接口描述</td>
                        <td colspan='5' style="border: 1px solid #000000;border-collapse: collapse;height: 20px;font-size: 12px; table-layout: fixed; word-break: break-all;">
                            @{
                                if (operation.Value.Description != null)
                                {
                                    @:@operation.Value.Description.ToString()
                                }
                                else if (operation.Value.Summary != null)
                                {
                                    @:@operation.Value.Summary.ToString()
                                }
                            }
                        </td>
                    </tr>
                    <tr style="border: 1px solid #000000;border-collapse: collapse;">
                        <td style="border: 1px solid #000000;border-collapse: collapse;">请求方式</td>
                        <td colspan='5'>
                            @operation.Key
                        </td>
                    </tr>

                    @if (operation.Value.Parameters != null && operation.Value.Parameters.Count > 0)
                    {
                        <tr style="background-color: #61affe;" align='center'>
                            <td style="border: 1px solid #000000;border-collapse: collapse;">参数名</td>
                            <td style="border: 1px solid #000000;border-collapse: collapse;">参数类型</td>
                            <td style="border: 1px solid #000000;border-collapse: collapse;">参数位置</td>
                            <td style="border: 1px solid #000000;border-collapse: collapse;">是否必填</td>
                            <td style="border: 1px solid #000000;border-collapse: collapse;" colspan='2'>说明</td>
                        </tr>
                        @foreach (var param in operation.Value.Parameters)
                        {
                            <tr align='center' style="border: 1px solid #000000;border-collapse: collapse;">
                                <td style="border: 1px solid #000000;border-collapse: collapse;">@param.Name</td>
                                <td style="border: 1px solid #000000;border-collapse: collapse;">@param.Schema.Type</td>
                                <td style="border: 1px solid #000000;border-collapse: collapse;">@param.In</td>
                                <td style="border: 1px solid #000000;border-collapse: collapse;">@param.Required</td>
                                <td style="border: 1px solid #000000;border-collapse: collapse;" colspan='2'>@param.Description</td>
                            </tr>
                        }
                    }

                    <tr style="border: 1px solid #000000;border-collapse: collapse;">
                        <td style="border: 1px solid #000000;border-collapse: collapse;">请求类型</td>
                        <td style="border: 1px solid #000000;border-collapse: collapse;" colspan='4'>
                            @if (operation.Value.RequestBody != null && operation.Value.RequestBody.Content != null)
                            {
                                @*foreach (var request in item.Value.Patch.Consumes)
                                    {
                                        @:@request
                                    }*@
                            }

                        </td>
                    </tr>

                    <tr style="background-color: rgb(84, 127, 177);" align='center'>
                        <td style="border: 1px solid #000000;border-collapse: collapse;">状态码</td>
                        <td style="border: 1px solid #000000;border-collapse: collapse;" colspan='5'>说明</td>
                    </tr>
                    @if (operation.Value.Responses != null && operation.Value.Responses.Count > 0)
                    {
                        foreach (var response in operation.Value.Responses)
                        {
                            <tr align='center' style="border: 1px solid #000000;border-collapse: collapse;">
                                <td style="border: 1px solid #000000;border-collapse: collapse;">@response.Key</td>
                                <td style="border: 1px solid #000000;border-collapse: collapse;" colspan='5'>@response.Value.Description</td>
                            </tr>

                        }
                    }

                    @*<tr style="border: 1px solid #000000;border-collapse: collapse;">
                            <td style="border: 1px solid #000000;border-collapse: collapse;">返回类型</td>
                            <td style="border: 1px solid #000000;border-collapse: collapse;" colspan='4'>
                                @if (item.Value.Patch.Produces != null && item.Value.Patch.Produces.Count > 0)
                                {
                                    foreach (var result in item.Value.Patch.Produces)
                                    {
                                        @:@result
                                    }
                                }

                            </td>
                        </tr>*@
                </table>
                <br />
            }
        }
    </div>
</body>
</html>
